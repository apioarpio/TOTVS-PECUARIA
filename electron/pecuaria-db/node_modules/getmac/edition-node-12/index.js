"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getMAC;
exports.isMAC = isMAC;

var _os = require("os");

// Prepare
const macRegex = /(?:[a-z0-9]{1,2}[:-]){5}[a-z0-9]{1,2}/i;
const zeroRegex = /(?:[0]{1,2}[:-]){5}[0]{1,2}/;
/**
 * Get the first proper MAC address
 * @param iface If provided, restrict MAC address fetching to this interface
 */

function getMAC(iface) {
  const list = (0, _os.networkInterfaces)();

  if (iface) {
    const parts = list[iface];

    if (!parts) {
      throw new Error(`interface ${iface} was not found`);
    }

    for (const part of parts) {
      if (zeroRegex.test(part.mac) === false) {
        return part.mac;
      }
    }

    throw new Error(`interface ${iface} had no valid mac addresses`);
  } else {
    for (const key of Object.keys(list)) {
      const parts = list[key];

      for (const part of parts) {
        if (zeroRegex.test(part.mac) === false) {
          return part.mac;
        }
      }
    }
  }

  throw new Error('failed to get the MAC address');
}
/** Check if the input is a valid MAC address */


function isMAC(macAddress) {
  return macRegex.test(macAddress);
}